/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/modules/products/form.js":
/*!***********************************************!*\
  !*** ./resources/js/modules/products/form.js ***!
  \***********************************************/
/***/ (() => {

eval("$(function () {\n  //-------------------------format text money\n  $.fn.inputFilter = function (inputFilter) {\n    return this.on('input keydown keyup mousedown mouseup select contextmenu drop', function () {\n      if (inputFilter(this.value)) {\n        this.oldValue = this.value;\n        this.oldSelectionStart = this.selectionStart;\n        this.oldSelectionEnd = this.selectionEnd;\n      } else if (this.hasOwnProperty('oldValue')) {\n        this.value = this.oldValue;\n        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);\n      } else {\n        this.value = '';\n      }\n    });\n  };\n\n  $('.text-money').inputFilter(function (value) {\n    return /^\\d*$/.test(value);\n  });\n\n  function addCommas(nStr) {\n    nStr += '';\n    x = nStr.split('.');\n    x1 = x[0];\n    x2 = x.length > 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n\n    while (rgx.test(x1)) {\n      x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n\n    return x1 + x2;\n  }\n\n  $(\".text-money\").on('keyup change click', function () {\n    var oldValue = $(this).val().split(',');\n    var newValue = addCommas(oldValue);\n\n    if (Number(oldValue) === 0) {\n      newValue = '';\n    }\n\n    $(this).val(newValue);\n  }); //----------------------------------------------Validate form\n\n  $('.custom-file-input').on('change', function () {\n    var fileName = $(this).val().split('\\\\').pop();\n    $(this).siblings('.custom-file-label').addClass('selected').html(fileName);\n  });\n  $('input').on('change', function () {\n    $(this).removeClass('is-invalid');\n    $(this).parent().find('.text-error').remove();\n  });\n  $('select').on('change', function () {\n    if ($(this).val() > 0) {\n      $(this).parent().removeClass('is-invalid');\n      $(this).parent().find('.text-error').remove();\n    }\n  }); //--------------------------------------------submit form\n\n  $('#products_form').on('submit', function (e) {\n    e.preventDefault();\n    $('.card-form').addClass('loading');\n    var post_url = $(this).attr('action');\n    var formData = new FormData(this);\n    $('.alert-errors').remove();\n    $.ajax({\n      type: 'POST',\n      url: post_url,\n      data: formData,\n      cache: false,\n      contentType: false,\n      processData: false\n    }).done(function (result) {\n      var redirectUrl = result.redirect_url;\n\n      if (redirectUrl !== undefined) {\n        return location.href = result.redirect_url;\n      }\n\n      $('.card-form').removeClass('loading');\n    }).fail(function (response) {\n      var errors = response.responseJSON.errors || response.responseJSON;\n      $('.text-error').remove();\n      $('input').removeClass('is-invalid');\n      $('select').parent().removeClass('is-invalid');\n      $('select').parent().find('.text-error').remove();\n      $.each(errors, function (i, item) {\n        var errorMessage = '<span class=\"text-danger text-error\">' + item + '</span>';\n\n        if (i == 'category_id') {\n          $('select[name =\"' + i + '[]\"]').parent().addClass('is-invalid').append(errorMessage);\n        }\n\n        $('input[name =\"' + i + '\"]').addClass('is-invalid');\n        $('input[name =\"' + i + '\"]').parent().append(errorMessage);\n      });\n      $('.card-form').removeClass('loading');\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/modules/products/form.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/modules/products/form.js"]();
/******/ 	
/******/ })()
;